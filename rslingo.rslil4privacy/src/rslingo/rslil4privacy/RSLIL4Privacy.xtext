grammar rslingo.rslil4privacy.RSLIL4Privacy with org.eclipse.xtext.common.Terminals

generate rSLIL4Privacy "http://www.rslil4privacy.rslingo/RSLIL4Privacy"

Policy:
	'Package' name=QualifiedName '{'
    	importelements+=Import*
    	(metadata=Metadata)?
    	collection+=Collection*
	    disclosure+=Disclosure*
	    retention+=Retention*
	    usage+=Usage*
	    informative+=Informative*
	    privateData+=PrivateData*
	    recipient+=Recipient*
	    service+=Service*
	    enforcement+=Enforcement*
  	'}';

QualifiedName:
  	ID ('.' ID)*;

Import:
	'import' importedNamespace=QualifiedNameWithWildcard;

QualifiedNameWithWildcard:
  	QualifiedName '.*'?;

Metadata:
	'PolicyMetadata {'
		'PolicyName' name=STRING
		'Description' description=STRING
		'Author(s)' authors=STRING
		'Organization(s)' organizations=STRING
		'Date' date=Date
		'Version' version=STRING
	'}';

Date:
	day=INT '-' month=Month '-' year=INT;

Month:
	name=('Jan'|'Feb'|'Mar'|'Apr'|'May'|'Jun'|'Jul'|'Aug'|'Sep'|'Oct'|'Nov'|'Dec');

Enforcement:
	'Enforcement' name=ID '{'
	'Name' enforcementName=STRING
	'Description' description=STRING
	'Type' type=('Action'|'Algorithm'|'Config'|'Process'|'Tool') '}';
	
Service:
	'Service' name=ID '{'
	'Name' serviceName=STRING
	('Description' description=STRING)?
	('RefersTo PrivateData' (refPrivateData=RefPrivateData | refPDAll='All'))?
	('Service_Part' servicePart+=ServicePart*)? '}';
	
Recipient:
	'Recipient' name=ID '{'
	'Name' recipientName=STRING
	'Description' description=STRING
	('Recipient_Part' recipientPart+=RecipientPart*)?
 	'Scope' scope=('Internal'|'External'|'Internal/External')
 	'Type' type=('Individual'|'Organization'|'Individual/Organization') '}';
 		
PrivateData:
	'PrivateData' name=ID '{'
	'Name' privateDataName=STRING
	'Description' description=STRING
	'Type' type=('PersonalInformation'| 'UsageInformation')
	attribute+=Attribute* '}'; 	

Attribute:
 	'Attribute' name=STRING '{'
 		'Description' description=STRING
	'}' (',')?;

Collection:
	'Collection' name=ID '{'
	'Description' description=STRING
	'Condition' condition = STRING
	('PartOf Collection' partCollection=[Collection])?
	('RefersTo PrivateData' (refPrivateData=RefPrivateData | refPDAll='All'))?
	('RefersTo Service' (refService=RefService | refSAll='All'))?
	('RefersTo Enforcement' (refEnforcement=RefEnforcement | refEAll='All'))?
	'Modality' modality=('Permitted'|'Obligation'|'Forbidden') '}';
	
Disclosure:
	'Disclosure' name=ID '{'
	'Description' description=STRING
	'Condition' condition=STRING
	('PartOf Disclosure' partDisclosure=[Disclosure])?
	('RefersTo Recipient' (refRecipient=RefRecipient | refRAll='All'))?
	('RefersTo Recipient-Source' (refRecipientSource=RefRecipientSource | refRSAll='All'))?
	('RefersTo Recipient-Target' (refRecipientTarget=RefRecipientTarget | refRTAll='All'))?
	('RefersTo PrivateData' (refPrivateData=RefPrivateData | refPDAll='All'))?
	('RefersTo Service' (refService=RefService | refSAll='All'))?
	('RefersTo Enforcement' (refEnforcement=RefEnforcement | refEAll='All'))?
	'Modality' modality=('Permitted'|'Obligation'|'Forbidden') '}';
	
Retention:
	'Retention' name=ID '{'
	'Description' description=STRING
	'Condition' condition=STRING
	('PartOf Retention' partRetention=[Retention])?
	'Period' period=STRING
	('RefersTo PrivateData' (refPrivateData=RefPrivateData | refPDAll='All'))?
	('RefersTo Service' (refService=RefService | refSAll='All'))?
	('RefersTo Enforcement' (refEnforcement=RefEnforcement | refEAll='All'))?
	'Modality' modality=('Permitted'|'Obligation'|'Forbidden') '}';
	
Usage:
	'Usage' name=ID '{'
	'Description' description=STRING
	'Condition' condition=STRING
	('PartOf Usage' partUsage=[Usage])?
	('RefersTo PrivateData' (refPrivateData=RefPrivateData | refPDAll='All'))?
	('RefersTo Service' (refService=RefService | refSAll='All'))?
	('RefersTo Enforcement' (refEnforcement=RefEnforcement | refEAll='All'))?
	'Modality' modality=('Permitted'|'Obligation'|'Forbidden') '}';
	
Informative:
	'Informative' name=ID '{'
	'Description' description=STRING
	'Condition' condition=STRING
	('PartOf Informative' partInformative=[Informative])?
	('RefersTo PrivateData' (refPrivateData=RefPrivateData | refPDAll='All'))?
	('RefersTo Service' (refService=RefService | refSAll='All'))?
	('RefersTo Enforcement' (refEnforcement=RefEnforcement | refEAll='All'))?
	'Modality' modality=('Permitted'|'Obligation'|'Forbidden') '}';
	
RecipientPart:
	recipientPart=[Recipient](',' refs+=[Recipient])*;

RefRecipient:
	refRecipient=[Recipient](',' refs+=[Recipient])*;
	
RefRecipientSource:
	refRecipientSource=[Recipient](',' refs+=[Recipient])*;
	
RefRecipientTarget:
	refRecipientTarget=[Recipient](',' refs+=[Recipient])*;
	
RefService:
	refService=[Service] (',' refs+=[Service])*;
	
ServicePart:
	servicePart=[Service](',' refs+=[Service])*;
		
RefPrivateData: 
	refPrivateData=[PrivateData](',' refs+=[PrivateData])*;
	
RefEnforcement:
	refEnforcement=[Enforcement](',' refs+=[Enforcement])*;
